{"version":3,"sources":["./src/app/shared/demo.service.ts","./src/app/demo/demo.component.ts","./src/app/demo/demo.component.html","./src/environments/environment.ts","./src/app/app.module.ts","./src/main.ts","./src/app/demo-app.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Demo } from './demo.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DemoService {\n  selectedUser: Demo;\n  users: Demo[];\n\n  readonly baseURL = 'http://localhost:3000/demo';\n\n  constructor(private httpClient: HttpClient) { }\n\n  postUser(newUser: Demo) {\n    return this.httpClient.post(this.baseURL, newUser);\n  }\n\n  getUserList() {\n    return this.httpClient.get(this.baseURL);\n  }\n\n  putUser(user: Demo) {\n    return this.httpClient.put(this.baseURL + `/${user._id}`, user);\n  }\n\n  deleteUser(_id: string) {\n    return this.httpClient.delete(this.baseURL + `/${_id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { DemoService } from '../shared/demo.service';\nimport { Demo } from '../shared/demo.model';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html'\n})\nexport class DemoComponent implements OnInit {\n\n  constructor(public demoService: DemoService) {\n\n  }\n\n  ngOnInit(): void {\n    this.resetForm();\n    this.refreshUsersList();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form)\n      form.reset();\n      this.demoService.selectedUser = {\n        _id: \"\",\n        name: \"\",\n        age: null\n      }\n  }\n\n  onSubmit(form: NgForm) {\n    let table = document.querySelector('table');\n    let emptyDiv = document.querySelector('.empty-div');\n    let connected = () => {\n      table.classList.add('display-none');\n      emptyDiv.innerHTML = 'Not connected to database';\n      emptyDiv.classList.remove('display-none');\n    }\n    let acceptable = () => {\n      if (form.value._id === '' || form.value._id === null) {\n        this.demoService.postUser(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          this.refreshUsersList();\n        },\n        err => {\n          console.log(err.message);\n          connected();\n        });\n      }else {\n        this.demoService.putUser(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          this.refreshUsersList();\n        },\n        err => {\n          console.log(err.message);\n          connected();\n        });\n        //restore reset after edit\n        let reset = document.querySelector('#reset');\n        reset.removeAttribute('disabled');\n        reset.classList.remove('transparent-border');\n      }\n    }\n\n    if (form.value.age <= 0) console.log('Please supply only age greater than 0');\n      else acceptable();\n  }\n\n  refreshUsersList() {\n    let table = document.querySelector('table');\n    let emptyDiv = document.querySelector('.empty-div');\n    let connected = (msg: string) => {\n      table.classList.add('display-none');\n      emptyDiv.innerHTML = msg;\n      emptyDiv.classList.remove('display-none');\n    }\n    this.demoService.getUserList().subscribe(res => {\n      if (res['count'] >= 1) {\n        table.classList.remove('display-none');\n        emptyDiv.classList.add('display-none');\n      } else {\n        connected('Database is empty - add data');\n      }\n      this.demoService.users = res['items'];\n    },\n    err => {\n      console.log(err.message);\n      connected('Not connected to database');\n    });\n  }\n\n  onEdit(user: Demo) {\n    this.demoService.selectedUser = user;\n    //prevent reset from clearing data in table\n    let reset = document.querySelector('#reset');\n    reset.setAttribute('disabled', '');\n    reset.classList.add('transparent-border');\n  }\n\n  onDelete(_id: string, form: NgForm) {\n    if(confirm('Are you sure you want to delete this record?') === true) {\n      this.demoService.deleteUser(_id)\n        .subscribe(res => {\n          this.refreshUsersList();\n          this.resetForm();\n        });\n    }\n  }\n}\n","\n<div class=\"b-container grid-auto-1-auto-row\">\n  <header class=\"flex-space-btw\">\n    <h1><a href=\"./\">node-mongo demo app</a></h1>\n    <nav>\n      <button>Tutorial</button>\n    </nav>\n  </header>\n  <main>\n    <div class=\"block-auto\">\n      <header class=\"flex-j-center main-header\">\n        <div class=\"main-description\">\n          <p>\n            Demo (client) app with CRUD operations setup for testing \n            the boilerplate template kit(s) generated from the node-mongo-cli. \n            Enter name and age in the form below. Your entries should be displayed \n            in a table below the form if connection is well set up. Click on this \n            link to see your entries returned as json data\n            - <a href=\"http://localhost:3000/demo\" target=\"_blank\">localhost:3000/demo</a>.\n            The content of the database you set up will also be updated accordingly.\n          </p>\n        </div>\n      </header>\n      <form class=\"block-auto form\" #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\">\n        <input class=\"block\" type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"demoService.selectedUser._id\">\n        <div class=\"block-auto formGroup\">\n          <label for=\"userName\">Name <span class=\"red-text bold-text\">*</span></label>\n          <input type=\"text\" id=\"userName\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"demoService.selectedUser.name\" required>\n        </div>\n        <div class=\"block-auto formGroup\">\n          <label for=\"userage\">Age <span class=\"red-text bold-text\">*</span></label>\n          <input type=\"number\" id=\"userage\" name=\"age\" #age=\"ngModel\" [(ngModel)]=\"demoService.selectedUser.age\" required>\n        </div>\n        <div class=\"flex-j-center btnGroup\">\n          <button type=\"submit\" [disabled]=\"!userForm.valid\" disabled>Submit</button>\n          <button id=\"reset\" class=\"fancy-btn\" type=\"button\" (click)=\"resetForm(userForm)\">Reset</button>\n        </div>\n      </form>\n      <section class=\"x-auto table-section\">\n        <table class=\"table display-none\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Age</th>\n              <th></th><!--empty one added to fix safari browser's styling issue -->\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let user of demoService.users\">\n              <td>{{user.name}}</td>\n              <td>{{user.age}}</td>\n              <td>\n                <button (click)=\"onEdit(user)\">Edit</button>\n                <button class=\"btn-danger\" (click)=\"onDelete(user._id, userForm)\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div class=\"flex-center empty-div\">Not connected to database</div>\n      </section>\n    </div>\n  </main>\n  <footer class=\"flex-center\">&copy;2021 | <a href=\"\">Code Collabo</a> | <a href=\"\"> Obiagba </a></footer>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DemoAppComponent } from './demo-app.component';\nimport { DemoComponent } from './demo/demo.component';\nimport { DemoService } from './shared/demo.service';\n\n@NgModule({\n  declarations: [\n    DemoAppComponent,\n    DemoComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    DemoService\n  ],\n  bootstrap: [\n    DemoAppComponent\n  ]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'demo-app',\n  template: '<app-demo></app-demo>'\n})\nexport class DemoAppComponent {\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}